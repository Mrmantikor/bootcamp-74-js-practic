/**
 * –°—Ç–≤–æ—Ä–∏ –∫–ª–∞—Å –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞, —è–∫–∏–π –º–∞—î —Ç–∞–∫—ñ –º–µ—Ç–æ–¥–∏:
 * - –º–µ—Ç–æ–¥ number, —è–∫–∏–π –Ω–∞–±—É–≤–∞—î –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π
 * - –º–µ—Ç–æ–¥ getResult, —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—ñ—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π, –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—Ö —ñ–∑ —á–∏—Å–ª–æ–º
 * - –º–µ—Ç–æ–¥–∏ add, substruct, divide, multiply
 * –û–±'—î–∫—Ç –∫–ª–∞—Å—É –º–æ–∂–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó —É –≤–∏–≥–ª—è–¥—ñ –ª–∞–Ω—Ü—é–∂–∫–∞
 */

// class Calculator {
//   constructor() {
//     this.result = 0;
//   }
//   #checkNumber(num) {
//     return typeof num === 'number';
//   }
//   number(num) {
//     const isValidNumber = this.#checkNumber(num);
//     if (isValidNumber) {
//       this.result = num;
//     } else {
//       console.log(`${num} is not valid number!`);
//     }

//     return this;
//   }
//   getResult() {
//     console.log(this.result);
//     return this;
//   }
//   add(num) {
//     if (!this.#checkNumber(num)) {
//       console.log(`${num} is not valid number!`);
//       return this;
//     }
//     this.result += num;
//     return this;
//   }
//   substruct(num) {
//     const isValidNumber = this.#checkNumber(num);
//     if (isValidNumber) {
//       this.result -= num;
//     } else {
//       console.log(`${num} is not valid number!`);
//     }
//     return this;
//   }
//   divide(num) {
//     const isValidNumber = this.#checkNumber(num);
//     if (isValidNumber) {
//       this.result /= num;
//     } else {
//       console.log(`${num} is not valid number!`);
//     }
//     return this;
//   }
//   multiply(num) {
//     const isValidNumber = this.#checkNumber(num);
//     if (isValidNumber) {
//       this.result *= num;
//     } else {
//       console.log(`${num} is not valid number!`);
//     }
//     return this;
//   }
// }
// const calculator = new Calculator();
// // calculator.number(6);
// // console.log(calculator.number(6));

// // calculator.add(12);
// // calculator.substruct(15);
// // calculator.divide(2);
// // calculator.multiply(100);
// // calculator.getResult();
// calculator
//   .number('hi')
//   .add(10)
//   .divide(2)
//   .multiply(4)
//   .substruct(5)
//   .getResult()
//   .number(20)
//   .substruct(40)
//   .multiply(-8)
//   .divide(160)
//   .add(20)
//   .getResult();

/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Storage, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä—ñ–≤.
? –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤, —ñ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏–º–µ –π–æ–≥–æ —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å items.
? –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É:
? getItems() ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤.
? addItem(item) - –æ—Ç—Ä–∏–º—É—î –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä —Ç–∞ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ –ø–æ—Ç–æ—á–Ω–∏—Ö.
? removeItem(item) - –æ—Ç—Ä–∏–º—É—î —Ç–æ–≤–∞—Ä —ñ, —è–∫—â–æ –≤—ñ–Ω —î, –≤–∏–¥–∞–ª—è—î –π–æ–≥–æ –∑ –ø–æ—Ç–æ—á–Ω–∏—Ö.
*/

// class Storage {
//   constructor(items = []) {
//     this.items = items;
//   }
//   getItems() {
//     return this.items;
//   }
//   addItem(item) {
//     this.items.push(item);
//   }
//   removeItem(item) {
//     this.items = this.items.filter(el => el !== item)
//   }
// }

// const stor1 = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);

// stor1.addItem('üçå');
// stor1.removeItem('üçã');
// console.log(stor1.getItems());;

/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
? –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä —Ç–∞ —Å–µ—Ç—Ç–µ—Ä login —Ç–∞ email.
*/

// class User {
//   #login;
//   #email;
//   constructor({ login, email }) {
//     this.#login = login;
//     this.#email = email;
//   }
//   get login() {
//     return this.#login;
//   }
//   set login(newLogin) {
//     this.#login = newLogin;
//   }
//   get email() {
//     return this.#email;
//   }
//   set email(newEmail) {
//     if (this.#checkEmail(newEmail)) {
//       this.#email = newEmail;
//     } else {
//       console.log(`Your email is incorect`);
//     }
//   }
//   #checkEmail(newEmail) {
//     return newEmail.endsWith('@gmail.com') && newEmail.length > 13;
//   }

// }

// const mango = new User({ login: 'mango', email: 'mango@gmail.com' });

// mango.email = 'poly@gmail.com';
// console.log(mango.email);

/**
 * –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Notes —è–∫–∏–π —É–ø—Ä–∞–≤–ª—è—î –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–æ—Ç–∞—Ç–æ–∫ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ items.
 * –ù–æ—Ç–∞—Ç–∫–∞ - —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ text —ñ priority.
 * –î–æ–¥–∞–π –∫–ª–∞—Å—É —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ Priopity, —è–∫–∏–π –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –æ–±'—î–∫—Ç —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.
 * –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏
 * - addNote(note),
 * - removeNote(text)
 * - updatePriority(text, newPriority)
 */
// class Notes{
//   static priorityriority(){
//     return {
//       LOW: 'low',
//       HIGHT: 'hight',
//     }
//   }
//   constructor(){
//     this.items = [];
//   }
//   addNote(note){
//     this.items.push(note);
//   }
//   removeNote(text){
//     this.items = this.items.filter(el => (el.text !== text));
//   }
//   updatePriority(text, newPriority){
//     this.items = this.items.map(el => el.text === text ? {...el, priority: newPriority} : el)
//   }
// }

// const note = new Notes();
// note.addNote({text: 'Hello', priority: Notes.priority().LOW })
// note.addNote({text: 'Hi', priority: Notes.priority().HIGHT })
// note.addNote({text: 'Good day', priority: Notes.priority().LOW })
// note.removeNote('Hi');
// note.updatePriority('Hello', Notes.priority().HIGHT)

// console.log(note);

/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
? email - email
? age - –≤—ñ–∫, —á–∏—Å–ª–æ
? numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
? topics - –º–∞—Å–∏–≤ —Ç–µ–º –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä
? –ö–ª–∞—Å —á–µ–∫–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.
? –î–æ–±–∞–≤ –º–µ—Ç–æ–¥ getInfo(),—è–∫–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫: Blogger ${email} is ${–≤—ñ–∫} years old and has ${–∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤} posts.
? –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø
–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.
? –î–æ–¥–∞–π –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –¥–æ–¥–∞–≤–∞—Ç–∏, –≤–∏–¥–∞–ª—è—Ç–∏, –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –ø–æ—Å—Ç–∏ –±–ª–æ–≥–µ—Ä–∞. 
–û–¥–∏–Ω –ø–æ—Å—Ç —Ü–µ –æ–±'—î–∫—Ç –∑ –ø–æ–ª—è–º–∏ text, data, head, id
*/

// class Blogger {
//   #topics;
//   constructor({ email, age, numbeOfPosts, topics = [] }) {
//     this.email = email;
//     this.age = age;
//     this.numbeOfPosts = numbeOfPosts;
//     this.#topics = topics;
//   }
//   getInfo() {
//     console.log(
//       `Blogger ${this.email} is ${this.age} years old and has ${this.numbeOfPosts} posts.`
//     );
//   }
//   updatePostCount(value) {
//     this.numbeOfPosts += value;
//   }
//   createPost(post) {
//     this.#topics.push(post);
//   }
//   get topics() {
//     return this.#topics;
//   }
//   getTopicById(id) {
//     return this.#topics.find(topic => topic.id === id);
//   }
//   topicUpdate(newTopic) {
//     if (!newTopic.id) return;
//     this.#topics = this.#topics.map(topic =>
//       topic.id === newTopic.id ? { ...topic, ...newTopic } : topic
//     );
//   }
//   removeTopic(id) {
//     this.#topics = this.#topics.filter(topic => topic.id !== id);
//   }
// }
// const newBlogger = new Blogger({
//   email: 'blog@gmail.com',
//   age: 23,
//   numbeOfPosts: 45,
// });
// newBlogger.getInfo();
// newBlogger.updatePostCount(4);

// newBlogger.createPost({ text: 'dhgfdjsfguew', data: '12.02.2025', head: 'Sport', id: 1 });
// newBlogger.createPost({ text: 'dhgfdjsfguew', data: '12.02.2025', head: 'Life', id: 3 });
// newBlogger.createPost({ text: 'dhgfdjsfguew', data: '12.02.2025', head: 'Food', id: 4 });
// // console.log(newBlogger);
// // console.log(newBlogger.topics);
// console.log(newBlogger.getTopicById(3));
// console.log(newBlogger.topicUpdate({ id: 1, text: 'jhfkjsg' }));
// newBlogger.removeTopic(1);
// console.log(newBlogger);


//? –ó–∞–≤–¥–∞–Ω–Ω—è –ø–æ–ª—è–≥–∞—î —É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏, —â–æ –¥–æ–∑–≤–æ–ª—è—î –∫–µ—Ä—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ñ.

// #### –î–ª—è —Ü—å–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∫–ª–∞—Å `Order`, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å —Ç–∞–∫—ñ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:
// - `tableNumber` - –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∏–∫–∞, –¥–µ –∑—Ä–æ–±–ª–µ–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
// - `items` - –º–∞—Å–∏–≤ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –¥–µ –∫–æ–∂–µ–Ω –ø—Ä–µ–¥–º–µ—Ç –º—ñ—Å—Ç–∏—Ç—å —ñ–º'—è (name) —Ç–∞ —Ü—ñ–Ω—É (price)
// - `isPaid` - –ø–æ–∑–Ω–∞—á–∞—î, —á–∏ –æ–ø–ª–∞—á–µ–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (default = false)
// ##### –î–ª—è –∫–ª–∞—Å—É Order –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ç–∞–∫—ñ –º–µ—Ç–æ–¥–∏:
// - `calculateTotal`() - –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.
// - `markAsPaid`() - –ø–æ–∑–Ω–∞—á–∞—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —è–∫ –æ–ø–ª–∞—á–µ–Ω–µ
// - `addItem`() - —è–∫–∏–π –¥–æ–¥–∞—î –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ –º–∞—Å–∏–≤—É "items"
// - `removeItem`() - —è–∫–∏–π –≤–∏–¥–∞–ª—è—î –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω—è –∑ –º–∞—Å–∏–≤—É "items"
// ##### –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≥–µ—Ç–µ—Ä–∏ —Ç–∞ —Å–µ—Ç–µ—Ä–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Å—Ç–æ–ª–∏–∫–∞, —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ —Å–∞–º–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
// #### –¢–∞–∫–æ–∂ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å `MenuItem`, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ `name` —Ç–∞ `price` –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è

// class Order {
//   #tableNumber;
//   #items;
//   #isPaid;

//   constructor(tableNumber, items = [], isPaid = false) {
//     this.#items = items;
//     this.#tableNumber = tableNumber;
//     this.#isPaid = isPaid;
//   }

//   addItem(newItem) {
//     this.#items.push(newItem);
//   }

//   get items() {
//     return this.#items;
//   }

//   calculateTotal() {
//     // let totalPrice = 0;
//     // this.#items.forEach(el => totalPrice += el.price);
//     // return totalPrice;

//     return this.#items.reduce((acc, el) => acc + el.price, 0);
//   }

//   markAsPaid() {
//     if (!this.#isPaid) {
//       this.#isPaid = true;
//     }
//     console.log("Paid sucssesfull");
//   }

//   removeItem(itemToRemove) {
//     this.#items = this.#items.filter(el => el.id !== itemToRemove);
//   }

//   get tableNumber() {
//     return this.#tableNumber;
//   }

//   getItemById(id) {
//     return this.#items.find(el => el.id === id);
//   }
//   get isPaid() {
//     return this.#isPaid;
//   }
// }


// class MenuItem {
//   constructor(name, price) {
//     this.name = name;
//     this.price = price;
//     this.id = Date.now();
//   }
// }

// const order1 = new Order(1);
// const item1 = new MenuItem('chicken', 200);
// const item2 = new MenuItem('cow', 400);
// const item3 = new MenuItem('chicken', 100);

// order1.addItem(item1);
// order1.addItem(item2);
// order1.addItem(item3);
// console.log(order1.calculateTotal());
// order1.markAsPaid();
// order1.removeItem(3);
// console.table(order1.items);
// console.log(order1.getItemById(2));
// console.log(order1.isPaid);